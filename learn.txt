smile basic learning 

 3ds:  45x29
 wiiu: 35x15
                                                                      U                   D
0                   1                   2                   3                   4                   5 
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 
----------------------------------------------------------------------------------------------------

ファイル一覧

file name
AB-CDname

  AB: 章番号
      A: 大項目
      B: 中項目
      B=0: カテゴリ説明
  CD: 項目番号
      C: 小項目
      D: 項目番号
      CD=0: 概要説明

12345678901234
__README.TXT    最初に見るテキスト、このプロジェクトの見方の説明
_HISTORY.TXT    このプロジェクトの履歴
_0-01MOKUJI     目次とファイル名対応一覧
00-00BASIC      0.基本 / 文章
	プログラム
	命令
	操作
		program
		BASIC
10-00BASIC      1.基本 / 実行例
	操作
		DIRECT mode
		EDIT mode
			slot
	演算
		計算
			print
			四則演算
	変数 / メモリ操作
		変数
			型
		配列
			操作
		文字列
			文字列演算
			文字は配列
		表示
			locate / console
			grp
			bg
			sprite
		
	制御
		制御
			GOTO
			IF-THEN
			FOR/NEXT
			WHILE/WEND
			REPEAT/UNTIL
		関数
			GOSUB
			DEF
		wait
			vsync
			wait
	定義
		DATA
			READ/DATA
			RESTORE

	入力
		入力
			button

	petit com
		smile tool

10-00CALC       1. 演算
11-00MATH       数学計算命令
12-00STRING     文字列計算命令

20-00INPUT      2.入力
21-00BUTTON     ボタン
22-00TOUCH      タッチパネル・パッド
23-00SENSOR     加速度センサー系
24-00WIRELESS   3DS通信
25-00CONTROLLER BIGコントローラタイプ系
26-00MIC        マイク

3_-00FILE       3.ファイル
31-01SAVE       
32-01LOAD       
33-01BINARY     

4_-00GRAPHICS   4.画面出力 / グラフィック
40-02RGB        RGB
41-__CONSOLE    4-1. console
41-02LOCATE     
42-__GRP        4-2. GRP
42-01GRP        
43-__BG         4-3. BG
43-01BG         
43-10BGANIME    
44-__SPRITE     4-4. SPRITE
44-01SPRITE     
44-10SPANIME    
45-00FADE       4-5. FADE
46-00DIALOG     4-6. DIALOG

50-00SOUND      5.サウンド
51-00BEEP
52-00MML        5-1. MML
53-00PCM        5-2. PCM
54-00EFFECT     5-3. EFFECT

60-00SYSTEM     6. system特有
61-00PRG        6-1. slot prg edit
62-00SYSTEMVAR  6-2. system変数
63-00SYSTEMDEF  6-3. system定数

70-00TEXT       7. 文章
71-00BITCALC    bit演算
72-00MATH       数学・物理
72-01SIN        三角関数

80-00           8. 応用

90-00GAME       9. 作り方

A0-00LIBRARY    A. 公開ライブラリ系(解析用コメント必須)
B0-00PUBLIC     B. 公開作品系(解析系コメント必須)

ZZ-00           Z. 追記する人むけ
ZZ-01           staff list




******************************************************************************************************
                                                                      U                   D
0                   1                   2                   3                   4                   5 
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 
----------------------------------------------------------------------------------------------------

----------------
Miiverse質問内容

・SPとBGの当たり判定
	SPRITEとBGの当たり判定のことかな？
	BGはただの背景のため、SPRITEとBGは１つの命令で当たっているかの判定はできないので、自分で計算する必要があります。
	SPOFS設定したSPRITE座標に対応するBGの座標をBGGETで取得して、SPRITEと当たり判定をしたいBGだったら当たり判定をします。
	BGを設定するための配列を事前に用意しているなら、その配列とSPRITE座標との当たり判定をしてもいいかもしれません。

・SPANIM系
	SPANIMは開始処理なので、ループごとに毎回呼んではいけない

・配列変数
	配列変数の具体的な使い方を失敗例（つかわないばあい）と成功例（つかったばあい）を書く

・SPHITSP仕様 / 3ds/ 2017/1/6 18:30
	SPHITSPを使ってSPに対してSPANIMで回転したSPが当たっているか確認したいのですが上手くいきません。回転しているSPは対象外なのでしょうか？
	・仕様です
	衝突判定の範囲は回転出来なかったはずです。残念ながら。縦長の衝突判定のスプライトを横に倒しても斜めにしても、縦長のままです。
	速度は遅くなりますが、自分で当たり判定用の関数を作るのが最も手っ取り早いでしょう。回転行列を使えば簡単に作ることが可能です。

・誤差なしで文字列に変換 / 3ds/ 2017/1/3 19:02
	2147483648以上の数値を誤差なしで（小数点以下の誤差は許容）文字列に変換する方法を教えてください。
	ただし、文字列に変換した値は再び数値に戻せる状態でお願いします
		STR$(2147482647)＝2.14748e+9 :VAL$("2.14748E+9")=2147480000
		FORMAT＄使う: 「Out of range」

	整数値だけで良いのであれば実はFORMAT$で簡単に対応が可能です。
	FORMAT$("%.F",A)でAの値はどんな値でも文字列に変換できます。
	ただし、実数型の有効桁数の関係で9007199254740992を超える整数値は正しく表現ができないため注意が必要です。


・ワイヤレス通信で自分の本体と別の本体の乱数をそろえたいのですがどうすればよろしいですか。 / 2016/12/31 17:33
	シードをそろえる
	親機で発生させて、子機に送りつけるのが確実

・TALKはアルファベットで英語でしゃべる？ / 3ds/2016/12/30 15:17
	・しゃべれません、英語っぽい日本語を読ませましょう

・DEF RETURN  3ds/ 2016/12/23 23:39
	多重GOSUB を DEF 化したいけど、RETURN があるのでDEFにうまくでいない
	・つくりを変えましょう
	「再帰」と「復帰」の名称間違えがあるので、名称の説明も必要
	・DEF内から同じDEFを呼べるので、ちゃんと関数が追われるようにつくれば再帰になる。再帰の詳しい使い方は7.文章 を参照


・LOCATE / big/2017/1/9 0:58
	consoleでLOCATE使って座標うごかしてるけど、最終行にくるとずれます
	・PRINT はなにもしないと改行するので、PRINT A; とセミコロンで改行しなようにします

・SPRITE２枚使いたい / big/2017/1/7 23:07
	LOAD GRP4、SPSET、LOAD GRP4、SPSETしたけど最初のSPSETが変わっちゃう
	・SPRITEはGRP4の512x512しか参照できないので、それ以上を使いたいなら工夫が必要
	XON WIIU で 512x512x4 にする、GRP/BG layerを使う

・PCMSTREAM / big/2017/1/5 10:39
	リアルタイムでPCMSTREAMに渡す配列を書き換えて再生がうまくいかない
	・MILLSECで自前で監視するのではなく、PCMPOSで判定する
	PCMSTREMの再生は配列の生値ではなく、別バッファに転送されるので、PCMPOSでちゃんと監視しないとだめ
	

----------------
説明系
・GRP と GRP0-5の名前が似てる
	グラフィック画面とGRPは別物
	GRPはメモリの名前
	グラフィック画面は表示されるいエリア
	グラフィック画面にどのGRP0-5を表示するかが GPAGE 指定
	
	GRP0-5はVRAMです
	BGはGRP4のタイルを並べて表示
	SPRITEはGRP5のタイルチップを１つから複数で表示
	FADEは単一色だけ
	CONSOLEはGRPFの文字だけ (WIDTH 16.16でGRPF16の文字)

----------------
具体例
・smile toolで作った BGの使い方

・width 16がおおきくない /wiiU
	WIDTH 16.16 で 16dot fontになる
	GRPFは 8x8専用なので、いまのところ 16dot fontのGRPは取得できない
	WIDTH 16,16 のあとにFONTDEF すると16dot font も変更できるが、文字コードでしか指定ができない
	// GRPF 16はそのうち参照方法が追加される？

・FONTDEF の仕様 / 3ds/ 2017/1/14 20:32
	FONTDEFは文字コードで指定して、GRPF の画像を書き換える
	文字コードとGRPFの対応がとれてない文字コードをFONTDEFで指定して書き換えると illegal  function call になる
	豆腐文字を書き換えたければGRPFを書き換える



----------------
作成例
・マップデータのもちかた
	console/DATA文、smiletool保存、その他配列 からBGへの展開

・SPRITEとBGの判定
	BGGET
	マップ用配列と比較

・１次元配列を２次元配列のように使う方法
	DIV, MOD

----------------
文章
・ハフマン符号
	トピックにあったので、まとめが必要ならまとめる

・bit演算
	hex,bin,decあたりを

・3D表現
	3D概念
		世界座標→視点座標変換の概念
		１つの点が世界座標中心やカメラ中心座標から回転しているだけ、点がたくさんあつまって立体になっているだけ
		ベクトル＝向きと長さ、位置はない
		
		参考文献を書いておく
	ワイヤフレーム
	DOOMっぽいの
		高さを気にせず疑似３D

----------------
技術系
・ループの速度	3ds/ 2017/1/13 14:46
	FOR/ UNTIL/ WHILE の速度
	重たい命令系
		→ 初心者講座としては先すぎる情報なので優先度は低い


----------------
購入前系 / 買わないとこの文章みれないので優先度低 / BIG買って 3ds検討、その逆とか用
・３号とbigの違い
	wiiu: 据え置き
	3ds: 携帯
	// いろんな人の意見があるのでまとめる

質問系
	Ｑ．プチコンでベーシックおぼえて役に立ちますか？
	Ａ．役に立ちます。
	８０年代や９０年代のパソコンでBASICでプログラム覚えた人は、ゲーム系やプログラムのお仕事してる人が多いです。
	BASICはBASIC言語を勉強するだけじゃなく、他の言語でも使える「プログラムの作り方」も勉強できるので、お手ごろな開発環境（プチコン以外でもHSPやJavaScriptなどなど）があるなら、まずはなにかプログラムを作ってみて見るのがいいかも。
	ちなみにBASICに出てくるIF判定、FOR繰り返し、文字操作、数学計算などは他のどの言語でもでてきます。
	プチコンはゲームつくるために向いているので、ゲームを作ってみたいならまずはプチコンでBASICを覚えるのがいいかも。

	Ｑ．プチコン買う前にどんな感じか見てみたい
	Ａ．プチコン公式ページの「付属サンプル」からそれぞれのサンプルの「プログラムリストを見る」で実際のプログラムを見ることが出来ます。
	プログラムだけだとどんな動きするか分かりづらいけど、命令用とあわせてプログラムを解析してみて、なんとなく分かりそうならプログラムを作るのに向いているかも！

	Ｑ．ゲームどうやって作るの？
	Ａ．ゲームの中で動くもの全部を自分でプログラムして作ります。
	だいたいのゲームは一瞬（６０分の１秒）の画面をプログラムで描いて、また次の一瞬の画面を作っていくパラパラ漫画です。（教科書のページの角のにちょっとずつ違う絵を描いてパラパラめくると動いてるように見えるあれ）
	自分の考えたゲームのルールでこのパラパラ漫画の結果を書き換えるとゲームになります。
	（ゲームのルールは、どのタイミングでボタン入力したり、ボタン入力でメニュー選択したコマンドを選択したり、自動的に動く敵は計算結果で動かしたり、主人公キャラが動いた方向が沼地や壁だったりなどなど）

	Ｑ．どんなゲームが作れますか？
	Ａ．プチコンの命令を組み合わせてできるゲームなら何でもできます。
	プチコンにはこんな命令があります。
	・GRPと呼ばれる絵を覚える場所があります
	・BGと呼ばれる絵をタイル状に置く場所があります
	・SPRITEと呼ばれるタイル１枚を動かす方法があります
	・プチコン内蔵の楽器を組み合わせて音楽が作れて、それを鳴らせます
	・ほとんどのボタンとタッチパッドのタッチ情報が読めます
	・本体を動かした加速度や傾きが読めます
	・マイクから録音できるし、マイクで録音した音が鳴らせます
	・3DS版はプチコンが入っている3DS同士で４台まで通信ができます

	プチコンでできているゲームはこれらの組み合わせでできています。
	最近の3Dゲームやオンラインゲームみたいなのは3Dや通信の命令が無いので作れないけど、バーチャルコンソールのゲームくらいならほとんど同じくらいに作れます。

キーボード
	bluetoothは使えません、USBなら無線でもだいたいいけます

